

// var app = require('../app');
// var debug = require('debug')('ung-dung-mua-thuoc-truc-tuyen-pharmapoly:server');
// var https = require('https');
// var fs = require('fs');
// var path = require('path');

// /**
//  * Get port from environment and store in Express.
//  */

// var port = normalizePort(process.env.PORT || '443');
// app.set('port', port);

// /**
//  * Đọc chứng chỉ SSL
//  */

// var sslOptions = {
//   key: fs.readFileSync(path.join(__dirname, '../server.key')),
//   cert: fs.readFileSync(path.join(__dirname, '../server.cert'))
// };

// /**
//  * Create HTTPS server.
//  */

// var server = https.createServer(sslOptions, app);

// /**
//  * Listen on provided port, on all network interfaces.
//  */

// //server.listen(port);
// //server.listen(port, 'pharmapoly');
// server.listen(port, '0.0.0.0'); // Hoặc '127.0.0.1' nếu chỉ chạy local

// server.on('error', onError);
// server.on('listening', onListening);

// /**
//  * Normalize a port into a number, string, or false.
//  */

// function normalizePort(val) {
//   var port = parseInt(val, 10);

//   if (isNaN(port)) {
//     return val;
//   }

//   if (port >= 0) {
//     return port;
//   }

//   return false;
// }

// /**
//  * Event listener for HTTPS server "error" event.
//  */

// function onError(error) {
//   if (error.syscall !== 'listen') {
//     throw error;
//   }

//   var bind = typeof port === 'string'
//     ? 'Pipe ' + port
//     : 'Port ' + port;

//   switch (error.code) {
//     case 'EACCES':
//       console.error(bind + ' requires elevated privileges');
//       process.exit(1);
//       break;
//     case 'EADDRINUSE':
//       console.error(bind + ' is already in use');
//       process.exit(1);
//       break;
//     default:
//       throw error;
//   }
// }

// /**
//  * Event listener for HTTPS server "listening" event.
//  */

// function onListening() {
//   var addr = server.address();
//   var bind = typeof addr === 'string'
//     ? 'pipe ' + addr
//     : 'port ' + addr.port;
//   debug('Listening on ' + bind);
//   console.log(`Server running at https://localhost`);
// }


var app = require('../app');
var debug = require('debug')('ung-dung-mua-thuoc-truc-tuyen-pharmapoly:server');
var http = require('http');
const socketIo = require('socket.io');

/**
 * Get port from environment and store in Express.
 */
var port = normalizePort(process.env.PORT || '3000'); // Không dùng 443
app.set('port', port);

/**
 * Create HTTP server (Render tự cấp SSL).
 */
var server = http.createServer(app);
const io = socketIo(server);
app.set('io', io); 


/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port, '0.0.0.0'); // Cho phép truy cập từ mọi nơi
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
  var port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== 'listen') throw error;
  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log(`Server running at http://0.0.0.0:${port}`);
}
