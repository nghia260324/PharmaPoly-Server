<div class="container-fluid h-100">
    <div class="row h-100">
        <div class="col-lg-12 h-100">
            {{!-- <div class="card chat-app shadow border-0"> --}}
                <div class="row no-gutters h-100">
                    <!-- Danh sách chat -->
                    <div id="plist" class="col-md-4 border-end people-list p-3 bg-light">
                        <h5 class="mb-3">List All Chat</h5>
                        <ul id="list-chats" class="list-unstyled chat-list mb-0">
                            {{#each chats}}
                            <li class="clearfix mb-2 p-2 rounded bg-white d-flex align-items-center"
                                data-id="{{this._id}}" data-user-id="{{this.user_id}}"
                                data-full-chat='{{json this.fullChat}}' data-last-message="{{this.lastMessage}}"
                                data-user-avatar='{{lookup (lookup ../userMap this.user_id) "avatar"}}'
                                data-user-name="{{lookup (lookup ../userMap this.user_id) "name"}}"
                                onclick="loadChat(this)">

                                {{!-- <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar"
                                    class="rounded-circle me-3" width="45"> --}}
                                <img src="{{lookup (lookup ../userMap this.user_id) "avatar"}}" alt="avatar"
                                    class="rounded-circle me-3" width="45"
                                    style="aspect-ratio: 1/1; object-fit: cover;">
                                <span style="display: none;">
                                    Avatar: {{lookup (lookup ../userMap this.user_id) "avatar"}}
                                </span>

                                <div class="about flex-grow-1">
                                    <div class="d-flex justify-content-between align-items-center">
                                        {{!-- <div class="name fw-bold">{{lookup ../userNames this.user_id}}</div> --}}
                                        <div class="name fw-bold">{{lookup (lookup ../userMap this.user_id) "name"}}
                                        </div>

                                        <i class="bi bi-circle-fill text-secondary small"></i>
                                        <!-- Trạng thái offline -->
                                    </div>
                                    <div class="status text-muted small">
                                        <p class="mb-0">{{lookup (lookup ../userMap this.sentBy) "name"}} :
                                            {{this.lastMessage}}
                                        </p>
                                    </div>
                                </div>
                            </li>
                            {{/each}}
                        </ul>
                    </div>

                    {{!-- <div class="col-md-8 chat d-none d-md-block"> --}}
                        <div class="col-md-8 chat d-flex flex-column">
                            <div class="chat-header clearfix border-bottom px-3 py-2 bg-white">
                                <div class="d-flex align-items-center">
                                    <a href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#view_info"
                                        class="me-2">
                                        <img id="avatar_user_chat"
                                            src="https://bootdey.com/img/Content/avatar/avatar2.png" alt="avatar"
                                            class="rounded-circle" width="45"
                                            style="aspect-ratio: 1/1; object-fit: cover;">
                                    </a>
                                    <div class="chat-about">
                                        <h6 id="name_user_chat" class="m-0 fw-bold">Aiden Chavez</h6>
                                    </div>
                                </div>
                            </div>

                            {{!-- <div class="chat-history p-3" style="height: 400px; overflow-y: auto;"> --}}
                                <div class="chat-history p-3" style="flex: 1 1 auto; overflow-y: auto;">

                                    <ul class="list-unstyled mb-0">
                                        <!-- tin nhắn -->
                                    </ul>
                                </div>

                                <div class="chat-message clearfix border-top p-3 bg-light">
                                    <div class="input-group">
                                        <input type="text" class="form-control" placeholder="Enter text here...">
                                        <button class="btn btn-primary" type="button" onclick="sendMessage()">
                                            <i class="bi bi-send-fill"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    {{!--
                </div> --}}
            </div>
        </div>

        <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
        <script>
            const adminId = "67b344c3744eaa2ff0f0ce7d";
            //window.socket = io("http://localhost:3000", { query: { userId: adminId } });
            const socketHost = window.location.origin.replace(/^http/, "ws");

            window.socket = io(socketHost, { query: { userId: adminId } });

            socket.on("receiveMessage", (data) => {
                if (data.status === "success") {
                    const chatHistory = document.querySelector('.chat-history ul');
                    const message = data.data;
                    const messageTime = new Date(message.timestamp).toLocaleTimeString();
                    let messageHTML = '';
                    const lastMessage = chatHistory.querySelector('.message:last-child');

                    // Kiểm tra nếu tin nhắn trước đó là của cùng người gửi
                    const shouldDisplayTime = !lastMessage || lastMessage.getAttribute('data-sender-id') !== message.senderId;

                    if (document.querySelector(`li[data-user-id="${message.senderId}"]`)) {
                        document.querySelector(`li[data-user-id="${message.senderId}"] .status p`).innerHTML = document.querySelector(`li[data-user-id="${message.senderId}"]`).getAttribute('data-user-name') + ': ' + message.message;

                        if (message.senderId === adminId) {
                            // Nếu người gửi là admin
                            messageHTML = `
                        <li class="clearfix" data-sender-id="${message.senderId}">
                            ${shouldDisplayTime ? `<div class="message-data text-left d-flex align-item-center justify-content-center">
                                <span class="message-data-time">${messageTime}</span>
                            </div>` : ''}
                            <div class="message my-message" style="text-align: right">${message.message}</div>
                        </li>
                    `;
                        } else {
                            document.querySelector(`li[data-user-id="${message.senderId}"] i`).style.display = 'inline-block';

                            if (window.userId == message.senderId) {
                                // Nếu người gửi không phải admin
                                messageHTML = `
                            <li class="clearfix" data-sender-id="${message.senderId}">
                                ${shouldDisplayTime ? `<div class="message-data d-flex align-item-center justify-content-center">
                                    <span class="message-data-time">${messageTime}</span>
                                </div>` : ''}
                                <div class="message other-message">${message.message}</div>
                            </li>
                        `;
                            }
                        }

                        chatHistory.innerHTML += messageHTML;
                        setTimeout(() => {
                            chatHistory.parentElement.scrollTop = chatHistory.parentElement.scrollHeight;
                        }, 100);

                        const input = document.querySelector('.chat-message input');
                        input.addEventListener("focus", function () {
                            document.querySelector(`li[data-user-id="${message.senderId}"] i`).style.display = 'none';
                        });
                        input.addEventListener("input", function () {
                            document.querySelector(`li[data-user-id="${message.senderId}"] i`).style.display = 'none';
                        });
                    } else {
                        location.reload();
                    }
                } else {
                    console.error("Lỗi nhận tin nhắn:", data.message);
                }
            });
        </script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const firstChatItem = document.querySelector("#list-chats li");
                if (firstChatItem) {
                    firstChatItem.click(); // Kích hoạt sự kiện onclick để gọi loadChat()
                }
            });
            async function loadChat(e) {
                const parent = document.querySelector('.chat');
                const chatHistory = document.querySelector('.chat-history ul');
                document.getElementById("name_user_chat").innerHTML = e.getAttribute('data-user-name');
                const avatarUrl = e.getAttribute('data-user-avatar');
                document.getElementById("avatar_user_chat").src = avatarUrl;
                //parent.style.display = 'block';
                const user_id = e.getAttribute('data-user-id');
                window.userId = user_id;
                document.querySelector(`li[data-user-id="${user_id}"] i`).style.display = 'none';

                try {
                    const response = await fetch(`api/chat/fullChat?user_id=${user_id}`);
                    const result = await response.json();
                    if (result.status === 200) {
                        // Xóa tin nhắn cũ
                        chatHistory.innerHTML = "";

                        let lastSenderId = null;  // Biến theo dõi người gửi của tin nhắn trước đó

                        // Hiển thị tin nhắn mới
                        result.data.forEach(message => {
                            const messageTime = new Date(message.timestamp).toLocaleTimeString();
                            let messageHTML = '';

                            // Kiểm tra xem có phải là tin nhắn đầu tiên của người gửi này trong loạt tin nhắn liên tiếp không
                            const shouldDisplayTime = message.senderId !== lastSenderId;
                            lastSenderId = message.senderId;  // Cập nhật người gửi của tin nhắn hiện tại

                            if (message.senderId === adminId) {
                                // Nếu người gửi là admin
                                messageHTML = `
                            <li class="clearfix" data-sender-id="${message.senderId}">
                                ${shouldDisplayTime ? `<div class="message-data text-left d-flex align-item-center justify-content-center">
                                    <span class="message-data-time">${messageTime}</span>
                                </div>` : ''}
                                <div class="message my-message" style="text-align: right">${message.message}</div>
                            </li>
                        `;
                            } else {
                                // Nếu người gửi không phải admin
                                messageHTML = `
                            <li class="clearfix" data-sender-id="${message.senderId}">
                                ${shouldDisplayTime ? `<div class="message-data d-flex align-item-center justify-content-center">
                                    <span class="message-data-time">${messageTime}</span>
                                </div>` : ''}
                                <div class="message other-message">${message.message}</div>
                            </li>
                        `;
                            }

                            chatHistory.innerHTML += messageHTML;
                        });

                        // Cuộn xuống tin nhắn mới nhất sau khi nội dung được cập nhật
                        setTimeout(() => {
                            chatHistory.parentElement.scrollTop = chatHistory.parentElement.scrollHeight;
                        }, 100);
                    } else {
                        console.error("Lỗi:", result.message);
                    }
                } catch (error) {
                    console.error("Lỗi khi tải dữ liệu chat:", error);
                }
            }

            function sendMessage() {
                const input = document.querySelector('.chat-message input');
                const message = input.value.trim();
                const chatHistory = document.querySelector('.chat-history ul');
                const userId = window.userId;
                const messageTime = new Date().toLocaleTimeString();
                const adminId = "67b344c3744eaa2ff0f0ce7d";

                if (message) {
                    //console.log({ senderId: adminId, receiverId: userId, message: message });
                    window.socket.emit("sendMessageByAdmin", { adminId: adminId, userId: userId, message: message });
                    document.querySelector(`li[data-user-id="${window.userId}"] .status p`).innerHTML = "You" + ': ' + message;

                    // Hiển thị tin nhắn trong giao diện
                    const lastMessage = chatHistory.querySelector('.message:last-child');
                    const shouldDisplayTime = !lastMessage || lastMessage.getAttribute('data-sender-id') !== adminId;

                    chatHistory.innerHTML += `
                <li class="clearfix" data-sender-id="${adminId}">
                    ${shouldDisplayTime ? `<div class="message-data text-left d-flex align-item-center justify-content-center">
                        <span class="message-data-time">${messageTime}</span>
                    </div>` : ''}
                    <div class="message my-message" style="text-align: right">${message}</div>
                </li>
            `;

                    // Xóa nội dung ô nhập liệu sau khi gửi tin nhắn
                    input.value = '';
                    // Cuộn xuống tin nhắn mới nhất sau khi nội dung được cập nhật
                    setTimeout(() => {
                        chatHistory.parentElement.scrollTop = chatHistory.parentElement.scrollHeight;
                    }, 100);
                }
            }
        </script>