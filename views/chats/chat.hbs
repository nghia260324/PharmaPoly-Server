<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>

<style>
    body {
        background-color: #f4f7f6;
    }

    .card {
        background: #fff;
        transition: .5s;
        border: 0;
        border-radius: .55rem;
        position: relative;
        width: 100%;
        box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
    }

    .chat-app .people-list {
        width: 380px;
        position: absolute;
        left: 0;
        top: 0;
        padding: 20px;
        z-index: 7
    }

    .chat-app .chat {
        margin-left: 380px;
        border-left: 1px solid #eaeaea
    }

    .people-list {
        -moz-transition: .5s;
        -o-transition: .5s;
        -webkit-transition: .5s;
        transition: .5s
    }

    .people-list .chat-list li {
        padding: 10px 15px;
        list-style: none;
        border-radius: 3px
    }

    .people-list .chat-list li:hover {
        background: #efefef;
        cursor: pointer
    }

    .people-list .chat-list li.active {
        background: #efefef
    }

    .people-list .chat-list li .name {
        width: 248px;
        font-size: 15px
    }

    .people-list .chat-list img {
        width: 45px;
        border-radius: 50%
    }

    .people-list img {
        float: left;
        border-radius: 50%
    }

    .people-list .about {
        float: left;
        padding-left: 8px
    }

    .people-list .status {
        color: #999;
        font-size: 13px
    }

    .chat .chat-header {
        padding: 15px 20px;
        border-bottom: 2px solid #f4f7f6
    }

    .chat .chat-header img {
        float: left;
        border-radius: 40px;
        width: 40px
    }

    .chat .chat-header .chat-about {
        float: left;
        padding-left: 10px
    }

    .chat .chat-history {
        height: 700px;
        overflow-y: auto;
        padding: 20px;
        border-bottom: 2px solid #fff
    }

    .chat .chat-history ul {
        padding: 0
    }

    .chat .chat-history ul li {
        list-style: none;
        margin-bottom: 10px
    }

    .chat .chat-history ul li:last-child {
        margin-bottom: 0px
    }

    .chat .chat-history .message-data {
        margin-left: 50px;
        margin-bottom: 15px
    }

    .chat .chat-history .message-data img {
        border-radius: 40px;
        width: 40px
    }

    .chat .chat-history .message-data-time {
        color: #434651;
        padding-left: 600px
    }

    .chat .chat-history .message {
        color: #444;
        padding: 18px 20px;
        line-height: 26px;
        font-size: 16px;
        border-radius: 7px;
        display: inline-block;
        position: relative
    }

    .chat .chat-history .message:after {
        bottom: 100%;
        left: 7%;
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
        border-bottom-color: #fff;
        border-width: 10px;
        margin-left: -10px
    }

    .status p {
        margin-bottom: 0px;
    }

    .chat .chat-history .my-message {
        background: #efefef
    }

    .chat .chat-history .other-message {
        background: #e8f1f3;
        padding: 10px 15px;
        border-radius: 10px;
        max-width: 70%;
        position: relative;
        display: inline-block;
        text-align: left;
    }

    .chat .chat-message {
        padding: 20px
    }

    .online,
    .offline,
    .me {
        margin-right: 2px;
        font-size: 8px;
        vertical-align: middle
    }

    .online {
        color: #86c541
    }

    .offline {
        color: #e47297
    }

    .me {
        color: #1d8ecd
    }

    .float-right {
        float: right
    }

    .clearfix:after {
        visibility: hidden;
        display: block;
        font-size: 0;
        content: " ";
        clear: both;
        height: 0
    }

    .input-group {
        display: flex;
        align-items: center;
        border-radius: 25px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        background: #fff;
    }

    .input-group .form-control {
        border: none;
        padding: 12px 15px;
        font-size: 16px;
        border-radius: 25px;
        outline: none;
        transition: all 0.3s ease-in-out;
    }

    .input-group .form-control:focus {
        box-shadow: none;
    }

    .input-group-prepend {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #007bff;
        border-radius: 50%;
        cursor: pointer;
        padding: 10px;
        margin-right: 5px;
    }

    .input-group-text {
        background: transparent;
        color: white;
        border: none;
        font-size: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .input-group-prepend:hover {
        background: #0056b3;
    }

    .input-group-text i {
        font-size: 18px;
    }

    .wrapper {
        display: flex;
        align-items: center;
        /* Canh giữa theo chiều dọc */
        justify-content: space-between;
        /* Đẩy icon về cuối hàng */
        width: 100%;
        /* Đảm bảo phần tử con trải rộng hết hàng */
    }

    .wrapper .name {
        font-size: 16px;
        font-weight: bold;
        flex-grow: 1;
        /* Giúp name mở rộng để đẩy icon về cuối */
    }

    h6 {
        margin-top: 12px;
    }



    @media only screen and (max-width: 767px) {
        .chat-app .people-list {
            height: 465px;
            width: 100%;
            overflow-x: auto;
            background: #fff;
            left: -400px;
            display: none
        }

        .chat-app .people-list.open {
            left: 0
        }

        .chat-app .chat {
            margin: 0
        }

        .chat-app .chat .chat-header {
            border-radius: 0.55rem 0.55rem 0 0
        }

        .chat-app .chat-history {
            height: 300px;
            overflow-x: auto
        }
    }

    @media only screen and (min-width: 768px) and (max-width: 992px) {
        .chat-app .chat-list {
            height: 650px;
            overflow-x: auto
        }

        .chat-app .chat-history {
            height: 600px;
            overflow-x: auto
        }
    }

    @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 1) {
        .chat-app .chat-list {
            height: 480px;
            overflow-x: auto
        }

        .chat-app .chat-history {
            height: calc(100vh - 350px);
            overflow-x: auto
        }
    }
</style>

<div class="container-fluid">
    <div class="row clearfix">
        <div class="col-lg-12">
            <div class="card chat-app">
                <div id="plist" class="people-list">
                    <h3>List All Chat</h3>
                    <ul id="list-chats" class="list-unstyled chat-list mt-2 mb-0">
                        {{#each chats}}
                        <li class="clearfix" data-id="{{this._id}}" data-user-id="{{this.user_id}}"
                            data-full-chat='{{json this.fullChat}}' data-last-message="{{this.lastMessage}}"
                            data-user-name=" {{lookup ../userNames this.user_id}}" onclick="loadChat(this)">
                            {{!-- <img src="{{this.avatar}}" alt="avatar"> --}}
                            <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">
                            <div class="about">
                                <div class="wrapper">
                                    <div class="name">{{lookup ../userNames this.user_id}}</div>
                                    <i class="fa fa-circle offline"></i>
                                </div>
                                <div class="status">
                                    <p>{{lookup ../userNames this.sentBy}} : {{this.lastMessage}}</p>
                                </div>
                            </div>
                        </li>

                        {{/each}}
                    </ul>
                </div>
                <div class="chat" style="display: none;">
                    <div class="chat-header clearfix">
                        <div class="row">
                            <div class="col-lg-6">
                                <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
                                    <img src="https://bootdey.com/img/Content/avatar/avatar2.png" alt="avatar">
                                </a>
                                <div class="chat-about">
                                    <h6 id="name_user_chat" class="m-b-0">Aiden Chavez</h6>
                                    {{!-- <small>Last seen: 2 hours ago</small> --}}
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="chat-history">
                        <ul class="m-b-0">
                        </ul>
                    </div>
                    <div class="chat-message clearfix">
                        <div class="input-group mb-0">
                            <input type="text" class="form-control" placeholder="Enter text here...">
                            <div class="input-group-prepend" onclick="sendMessage()">
                                <span class="input-group-text"><i class="fa fa-send"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const adminId = "W7LRUTJQUEVBBthDw80GYhPK07E2";
    window.socket = io("http://localhost:3000", { query: { userId: adminId } });

    socket.on("receiveMessage", (data) => {
        if (data.status === "success") {
            const chatBox = document.querySelector(".chat-history ul");
            const chatHistory = document.querySelector('.chat-history ul');
            const message = data.data;
            const messageTime = new Date(message.timestamp).toLocaleTimeString();
            let messageHTML = '';
            if (document.querySelector(`li[data-user-id="${message.senderId}"]`)) {
                document.querySelector(`li[data-user-id="${message.senderId}"] .status p`).innerHTML = document.querySelector(`li[data-user-id="${message.senderId}"]`).getAttribute('data-user-name') + ': ' + message.message;

                if (message.senderId === 'W7LRUTJQUEVBBthDw80GYhPK07E2') {
                    // Nếu người gửi là admin
                    messageHTML = `
                            <li class="clearfix">
                                <div class="message-data text-left">
                                    <span class="message-data-time">${messageTime}</span>
                                </div>
                                <div class="message my-message float-right">${message.message}</div>
                            </li>
                            `;
                } else {
                    document.querySelector(`li[data-user-id="${message.senderId}"] i`).style.display = 'inline-block';

                    if (window.userId == message.senderId) {
                        // Nếu người gửi không phải admin
                        messageHTML = `
                                <li class="clearfix">
                                    <div class="message-data">
                                        <span class="message-data-time">${messageTime}</span>
                                    </div>
                                    <div class="message other-message">${message.message}</div>
                                </li>
                                `;
                    }
                }

                chatHistory.innerHTML += messageHTML;
                setTimeout(() => {
                    chatHistory.parentElement.scrollTop = chatHistory.parentElement.scrollHeight;
                }, 100);

                const input = document.querySelector('.chat-message input');
                input.addEventListener("focus", function () {
                    document.querySelector(`li[data-user-id="${message.senderId}"] i`).style.display = 'none';
                });
                input.addEventListener("input", function () {
                    document.querySelector(`li[data-user-id="${message.senderId}"] i`).style.display = 'none';
                });
            } else {
                location.reload();

            }


        } else {
            console.error("Lỗi nhận tin nhắn:", data.message);
        }
    });
</script>

<script>
    async function loadChat(e) {
        const parent = document.querySelector('.chat');
        const chatHistory = document.querySelector('.chat-history ul');
        document.getElementById("name_user_chat").innerHTML = e.getAttribute('data-user-name');
        parent.style.display = 'block';
        const user_id = e.getAttribute('data-user-id');
        window.userId = user_id;
        document.querySelector(`li[data-user-id="${user_id}"] i`).style.display = 'none';
        try {
            const response = await fetch(`api/chat/fullChat?user_id=${user_id}`);
            const result = await response.json();
            if (result.status === 200) {
                // Xóa tin nhắn cũ
                chatHistory.innerHTML = "";

                // Hiển thị tin nhắn mới
                result.data.forEach(message => {
                    const messageTime = new Date(message.timestamp).toLocaleTimeString();
                    let messageHTML = '';

                    if (message.senderId === 'W7LRUTJQUEVBBthDw80GYhPK07E2') {
                        // Nếu người gửi là admin
                        messageHTML = `
                            <li class="clearfix">
                                <div class="message-data text-left">
                                    <span class="message-data-time">${messageTime}</span>
                                </div>
                                <div class="message my-message float-right">${message.message}</div>
                            </li>
                            `;
                    } else {
                        // Nếu người gửi không phải admin
                        messageHTML = `
                            <li class="clearfix">
                                <div class="message-data">
                                    <span class="message-data-time">${messageTime}</span>
                                </div>
                                <div class="message other-message">${message.message}</div>
                            </li>
                            `;
                    }

                    chatHistory.innerHTML += messageHTML;
                });
                // Cuộn xuống tin nhắn mới nhất sau khi nội dung được cập nhật
                setTimeout(() => {
                    chatHistory.parentElement.scrollTop = chatHistory.parentElement.scrollHeight;
                }, 100);
            } else {
                console.error("Lỗi:", result.message);
            }
        } catch (error) {
            console.error("Lỗi khi tải dữ liệu chat:", error);
        }
    }

    function sendMessage() {
        const input = document.querySelector('.chat-message input');
        const message = input.value.trim();
        const chatHistory = document.querySelector('.chat-history ul');
        const userId = window.userId;
        const messageTime = new Date().toLocaleTimeString();
        const adminId = "W7LRUTJQUEVBBthDw80GYhPK07E2";

        if (message) {
            console.log({ senderId: adminId, receiverId: userId, message: message });
            window.socket.emit("sendMessageByAdmin", { adminId: adminId, userId: userId, message: message });
            document.querySelector(`li[data-user-id="${window.userId}"] .status p`).innerHTML = "You" + ': ' + message;

            // Hiển thị tin nhắn trong giao diện
            chatHistory.innerHTML += `
                <li class="clearfix">
                    <div class="message-data text-left">
                        <span class="message-data-time">${messageTime}</span>
                    </div>
                    <div class="message my-message float-right">${message}</div>
                </li>
            `;

            // Xóa nội dung ô nhập liệu sau khi gửi tin nhắn
            input.value = '';
            // Cuộn xuống tin nhắn mới nhất sau khi nội dung được cập nhật
            setTimeout(() => {
                chatHistory.parentElement.scrollTop = chatHistory.parentElement.scrollHeight;
            }, 100);
        }
    }
</script>