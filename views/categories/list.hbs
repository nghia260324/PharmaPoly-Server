<div class="p-4">
    <div id="categorySection" class="category-section">
        <div class="card mb-4">
            <div class="card-body">

                <h5 data-lang="add_new_category">Add New Category</h5>
                <form id="categoryForm" class="row g-3">
                    <input type="hidden" id="categoryId">
                    <div class="col-md-6">
                        <input type="text" class="form-control" id="categoryName" data-lang-placeholder="category_name"
                            placeholder="Category Name" required>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-primary">
                            <i class="bi bi-save"></i>
                            <span data-lang="save">Save</span>
                        </button>
                        {{!-- <button type="button" class="btn btn-secondary" onclick="clearCategoryForm()">
                            <i class="bi bi-x-circle"></i> Cancel
                        </button> --}}
                    </div>
                </form>
            </div>
        </div>

        {{!-- <div id="categoryList">
            {{#each categories}}
            <div class="category-card p-2" data-id="{{this._id}}" data-name="{{this.name}}">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <small class="text-muted category-id">ID: {{this._id}}</small>
                        <h5 class="category-name mb-0"><span data-lang="name">Name</span>: {{this.name}}</h5>
                    </div>
                    <div>
                        <button class="btn btn-sm btn-warning me-2" onclick="editCategory(this)">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="deleteCategory(this)">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            </div>
            {{/each}}
        </div> --}}
        <div class="card mb-4">
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th style="width: 36%;">
                                Tên danh mục
                                <a href="?sort={{#if (eq sort 'name_asc')}}name_desc{{else}}name_asc{{/if}}"
                                    class="ms-1 text-decoration-none">
                                    {{#if (eq sort 'name_asc')}}
                                    <i class="bi bi-sort-alpha-down"></i>
                                    {{else if (eq sort 'name_desc')}}
                                    <i class="bi bi-sort-alpha-up"></i>
                                    {{else}}
                                    <i class="bi bi-arrow-down-up"></i>
                                    {{/if}}
                                </a>
                            </th>
                            <th style="width: 10%;">
                                Hành động
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each categories}}
                        <tr class="category-card" data-id="{{this._id}}" data-name="{{this.name}}">
                            <td>{{this._id}}</td>
                            <td>{{this.name}}</td>
                            <td>
                                <div class="d-flex align-item-center justify-content-center">

                                    <button class="btn btn-sm btn-warning me-2" onclick="editCategory(this)">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    {{!-- <button class="btn btn-sm btn-danger" onclick="deleteCategory(this)">
                                        <i class="bi bi-trash"></i>
                                    </button> --}}
                                </div>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>

            </div>
            <nav>
                <ul class="pagination justify-content-center">
                    {{#if (gt currentPage 1)}}
                    <li class="page-item">
                        <a class="page-link" href="?page={{sub currentPage 1}}&limit={{limit}}">Trang trước</a>
                    </li>
                    {{/if}}

                    <li class="page-item disabled">
                        <span class="page-link">Trang {{currentPage}} / {{totalPages}}</span>
                    </li>

                    {{#if (lt currentPage totalPages)}}
                    <li class="page-item">
                        <a class="page-link" href="?page={{add currentPage 1}}&limit={{limit}}">Trang sau</a>
                    </li>
                    {{/if}}
                </ul>
            </nav>
        </div>
    </div>
</div>
<!-- Bootstrap Toast Notification -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="toastMessage" class="toast align-items-center text-white bg-success border-0" role="alert"
        aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                Đã thêm danh mục thành công!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                aria-label="Close"></button>
        </div>
    </div>
</div>


<!-- Popup Modal Edit Category -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        {{!-- modal-dialog-centered --}}
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Chỉnh sửa danh mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm">
                    <input type="hidden" id="editCategoryId"> <!-- Hidden field to store the ID -->

                    <!-- ID display field (disabled and greyed out) -->
                    <div class="mb-3">
                        <label for="editCategoryIdDisplay" class="form-label">ID</label>
                        <input type="text" class="form-control" id="editCategoryIdDisplay" disabled>
                    </div>

                    <!-- Category Name input field -->
                    <div class="mb-3">
                        <label for="editCategoryName" class="form-label">Tên danh mục</label>
                        <input type="text" class="form-control" id="editCategoryName" placeholder="Category Name"
                            required>
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Popup Modal Confirmation for Delete -->
{{!-- <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div> --}}


<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector(".btn-primary").addEventListener("click", saveCategory);
    });

    async function saveCategory() {
        event.preventDefault();

        const nameInput = document.getElementById("categoryName");

        const categoryName = nameInput.value.trim();

        if (!categoryName) {
            showToast("Category name is required!", "danger");
            return;
        }

        try {
            const response = await fetch("/categories/add", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name: categoryName })
            });

            const result = await response.json();
            if (result.status === 200) {
                showToast(result.message, "success");

                addCategoryToDOM(result.data);

                nameInput.value = '';
            } else {
                showToast(result.message, "danger");
            }
        } catch (error) {
            showToast("An error occurred!", "danger");
        }
    }

    function addCategoryToDOM(category) {
        const categoryListContainer = document.getElementById("categoryList");
        const categoryCard = document.createElement("div");
        categoryCard.classList.add("category-card");
        categoryCard.classList.add("p-2");
        categoryCard.setAttribute("data-id", category._id);
        categoryCard.setAttribute("data-name", category.name);
        categoryCard.innerHTML = `
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <small class="text-muted category-id">ID: ${category._id}</small>
                <h5 class="category-name mb-0">Name: ${category.name}</h5>
            </div>
            <div>
                <button class="btn btn-sm btn-warning me-2" onclick="editCategory(this)">
                    <i class="bi bi-pencil"></i>
                </button>
                <button class="btn btn-sm btn-danger" onclick="deleteCategory(this)">
                    <i class="bi bi-trash"></i>
                </button>
            </div>
        </div>
    `;
        categoryListContainer.appendChild(categoryCard);
    }

    function deleteCategory(button) {


        const categoryCard = button.closest('.category-card');
        const categoryId = categoryCard.getAttribute("data-id");

        if (!categoryId) {
            showToast("Category ID is required!", "danger");
            return;
        }

        const modal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
        modal.show();

        document.getElementById("confirmDeleteBtn").onclick = function () {

            fetch(`/categories/delete/${categoryId}`, {
                method: "DELETE"
            })
                .then(response => response.json())
                .then(result => {
                    if (result.status === 200) {
                        showToast(result.message, "success");
                        categoryCard.remove();
                        modal.hide();
                    } else {
                        showToast(result.message, "danger");
                    }
                })
                .catch(error => {
                    showToast("An error occurred!", "danger");
                    modal.hide();
                });
        };
    }


    function editCategory(button) {
        const categoryCard = button.closest('.category-card');
        const categoryId = categoryCard.getAttribute("data-id");
        const categoryName = categoryCard.getAttribute("data-name");

        document.getElementById("editCategoryId").value = categoryId;
        document.getElementById("editCategoryIdDisplay").value = categoryId;
        document.getElementById("editCategoryName").value = categoryName;

        new bootstrap.Modal(document.getElementById('editCategoryModal')).show();
    }

    document.getElementById("editCategoryForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const categoryId = document.getElementById("editCategoryId").value;
        const categoryName = document.getElementById("editCategoryName").value.trim();

        if (!categoryName) {
            showToast("Category name is required!", "danger");
            return;
        }

        try {
            const response = await fetch(`/categories/update/${categoryId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name: categoryName })
            });

            const result = await response.json();
            if (result.status === 200) {
                showToast(result.message, "success");
                updateCategoryInDOM(result.data);
                const modal = bootstrap.Modal.getInstance(document.getElementById('editCategoryModal'));
                modal.hide();
            } else {
                showToast(result.message, "danger");
            }
        } catch (error) {
            showToast("An error occurred!", "danger");
        }
    });

    function updateCategoryInDOM(category) {
        const categoryCard = document.querySelector(`[data-id="${category._id}"]`);

        categoryCard.querySelector(".category-name").textContent = `Name: ${category.name}`;
        categoryCard.setAttribute("data-name", category.name);
    }


    function showToast(message, type) {
        const toastEl = document.getElementById("toastMessage");
        toastEl.classList.remove("bg-success", "bg-danger");
        toastEl.classList.add(`bg-${type}`);
        toastEl.querySelector(".toast-body").innerText = message;

        const toast = new bootstrap.Toast(toastEl);
        toast.show();
    }
</script>