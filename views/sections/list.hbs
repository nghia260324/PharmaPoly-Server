<div class="d-flex justify-content-between align-items-center px-3 py-3 border-bottom"
    style="background-color: #343a40;">
    <form method="GET" class="d-flex" style="gap: 0.5rem;">
        <input type="text" name="search" class="form-control" placeholder="Tìm theo ID hoặc tên" value="{{search}}"
            style="min-width: 250px;">
        <button type="submit" class="btn btn-light">
            <i class="bi bi-search"></i>
        </button>
    </form>
</div>

<div class="container p-4">
    <div id="sectionSection" class="section-section">
        <div class="card mb-4">
            <div class="card-body">
                <h5 data-lang="add_new_section">Add New Section</h5>
                <form id="SectionForm" class="row g-3">
                    <input type="hidden" id="sectionId">
                    <div class="col-md-6">
                        <input type="text" class="form-control" id="sectionName" data-lang-placeholder="section_name"
                            placeholder="Section Name" required>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-primary">
                            <i class="bi bi-save"></i>
                            <span data-lang="save">Save</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
        <div class="card mb-4">
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th style="width: 35%;">ID</th>
                            <th>
                                Tiêu đề nội dung
                                <a href="?sort={{#ifEquals sort 'name_asc'}}name_desc{{else}}name_asc{{/ifEquals}}{{#if search}}&search={{search}}{{/if}}"
                                    class="ms-1 text-decoration-none">
                                    {{#ifEquals sort 'name_asc'}}
                                    <i class="bi bi-arrow-up"></i>
                                    {{else ifEquals sort 'name_desc'}}
                                    <i class="bi bi-arrow-down"></i>
                                    {{else}}
                                    <i class="bi bi-arrow-down-up"></i>
                                    {{/ifEquals}}
                                </a>
                            </th>

                            <th style="width: 10%;">
                                Hành động
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each sections}}
                        <tr class="section-card product-type-card" data-id="{{this._id}}" data-name="{{this.name}}">
                            <td>{{this._id}}</td>
                            <td>{{this.name}}</td>
                            <td>
                                <div class="d-flex align-item-center justify-content-center">
                                    <button class="btn btn-sm btn-warning me-2" onclick="editSection(this)">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    {{!-- <button class="btn btn-sm btn-danger" onclick="deleteSection(this)">
                                        <i class="bi bi-trash"></i>
                                    </button> --}}
                                </div>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
                {{#unless sections.length}}
                <div class="text-center text-muted py-3">
                    <i class="bi bi-search display-6 d-block mb-2"></i>
                    <h5>Không tìm thấy mục nội dung nào</h5>
                    <p>Hãy thử điều chỉnh từ khóa tìm kiếm hoặc bộ lọc.</p>
                </div>
                {{/unless}}
            </div>

            <nav>
                <ul class="pagination justify-content-center">
                    {{#if (gt currentPage 1)}}
                    <li class="page-item">
                        <a class="page-link"
                            href="?page={{sub currentPage 1}}&limit={{limit}}&search={{search}}&sort={{sort}}">Trang
                            trước</a>
                    </li>
                    {{/if}}

                    <li class="page-item disabled">
                        <span class="page-link">Trang {{currentPage}} / {{totalPages}}</span>
                    </li>

                    {{#if (lt currentPage totalPages)}}
                    <li class="page-item">
                        <a class="page-link"
                            href="?page={{add currentPage 1}}&limit={{limit}}&search={{search}}&sort={{sort}}">Trang
                            sau</a>
                    </li>
                    {{/if}}
                </ul>
            </nav>

        </div>
    </div>
</div>
<!-- Bootstrap Toast Notification -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="toastMessage" class="toast align-items-center text-white bg-success border-0" role="alert"
        aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                Section added successfully!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                aria-label="Close"></button>
        </div>
    </div>
</div>


<!-- Popup Modal Edit Section -->
<div class="modal fade" id="editSectionModal" tabindex="-1" aria-labelledby="editSectionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        {{!-- modal-dialog-centered --}}
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSectionModalLabel">Chỉnh sửa phần nội dung</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <form id="editSectionForm">
                    <input type="hidden" id="editSectionId"> <!-- Hidden field to store the ID -->

                    <!-- ID display field (disabled and greyed out) -->
                    <div class="mb-3">
                        <label for="editSectionIdDisplay" class="form-label">ID</label>
                        <input type="text" class="form-control" id="editSectionIdDisplay" disabled>
                    </div>

                    <!-- Section Name input field -->
                    <div class="mb-3">
                        <label for="editSectionName" class="form-label">Tiêu đề nội dung</label>
                        <input type="text" class="form-control" id="editSectionName" placeholder="Section Name"
                            required>
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelector(".btn-primary").addEventListener("click", saveSection);
    });

    async function saveSection() {
        event.preventDefault();

        const nameInput = document.getElementById("sectionName");
        const sectionName = nameInput.value.trim();

        if (!sectionName) {
            showToast("Tên mục nội dung không được để trống!", "danger");
            return;
        }

        try {
            const response = await fetch("/sections/add", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name: sectionName })
            });

            const result = await response.json();
            if (result.status === 200) {
                showToast(result.message || "Thêm mục nội dung thành công!", "success");

                nameInput.value = '';
                setTimeout(() => {
                    location.reload();
                }, 1000);
            } else {
                showToast(result.message || "Thêm mục nội dung thất bại!", "danger");
            }
        } catch (error) {
            showToast("Đã xảy ra lỗi!", "danger");
        }
    }

    function deleteSection(button) {
        const sectionCard = button.closest('.section-card');
        const sectionId = sectionCard.getAttribute("data-id");

        if (!sectionId) {
            showToast("ID mục nội dung không hợp lệ!", "danger");
            return;
        }

        const modal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
        modal.show();

        document.getElementById("confirmDeleteBtn").onclick = function () {
            fetch(`/sections/delete/${sectionId}`, {
                method: "DELETE"
            })
                .then(response => response.json())
                .then(result => {
                    if (result.status === 200) {
                        showToast(result.message || "Xóa mục nội dung thành công!", "success");
                        modal.hide();
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    } else {
                        showToast(result.message || "Xóa mục nội dung thất bại!", "danger");
                    }
                })
                .catch(error => {
                    showToast("Đã xảy ra lỗi!", "danger");
                    modal.hide();
                });
        };
    }

    function editSection(button) {
        const sectionCard = button.closest('.section-card');
        const sectionId = sectionCard.getAttribute("data-id");
        const sectionName = sectionCard.getAttribute("data-name");

        document.getElementById("editSectionId").value = sectionId;
        document.getElementById("editSectionIdDisplay").value = sectionId;
        document.getElementById("editSectionName").value = sectionName;

        new bootstrap.Modal(document.getElementById('editSectionModal')).show();
    }

    document.getElementById("editSectionForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const sectionId = document.getElementById("editSectionId").value;
        const sectionName = document.getElementById("editSectionName").value.trim();

        if (!sectionName) {
            showToast("Tên mục nội dung không được để trống!", "danger");
            return;
        }

        try {
            const response = await fetch(`/sections/update/${sectionId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name: sectionName })
            });

            const result = await response.json();
            if (result.status === 200) {
                showToast(result.message || "Cập nhật mục nội dung thành công!", "success");
                const modal = bootstrap.Modal.getInstance(document.getElementById('editSectionModal'));
                modal.hide();
                setTimeout(() => {
                    location.reload();
                }, 1000);
            } else {
                showToast(result.message || "Cập nhật mục nội dung thất bại!", "danger");
            }
        } catch (error) {
            showToast("Đã xảy ra lỗi!", "danger");
        }
    });

    function showToast(message, type) {
        const toastEl = document.getElementById("toastMessage");
        toastEl.classList.remove("bg-success", "bg-danger");
        toastEl.classList.add(`bg-${type}`);
        toastEl.querySelector(".toast-body").innerText = message;

        const toast = new bootstrap.Toast(toastEl);
        toast.show();
    }
</script>