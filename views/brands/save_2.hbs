<div class="p-4">
    <div id="brandSection" class="brand-section">
        <div class="form-container">
            <h5>Add New Brand</h5>
            <form id="brandForm" class="row g-3">
                <input type="hidden" id="brandId">
                <div class="col-md-6">
                    <input type="text" class="form-control" id="brandName" placeholder="Brand Name" required>
                </div>
                <div class="col-md-6">
                    <input type="text" class="form-control" id="brandDescription" placeholder="Brand Description" required>
                </div>
                <div class="col-md-6">
                    <button type="button" class="btn btn-primary" onclick="saveBrand(this)">
                        <i class="bi bi-save"></i> Save
                    </button>
                </div>
            </form>
        </div>

        <div id="brandList">
            {{#each brands}}
            <div class="brand-card" data-index="0">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="brand-name mb-0">{{this.name}}</h5>
                        <small class="text-muted brand-id">ID: {{this._id}}</small>
                        <p class="text-muted brand-description">{{this.description}}</p>
                    </div>
                    <div>
                        <button class="btn btn-sm btn-warning me-2" onclick="editBrand(this)">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="deleteBrand(this)">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>
    </div>
</div>

<!-- Bootstrap Toast Notification -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="toastMessage" class="toast align-items-center text-white bg-success border-0" role="alert"
        aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                Brand added successfully!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                aria-label="Close"></button>
        </div>
    </div>
</div>

<!-- Popup Modal Edit Brand -->
<div class="modal fade" id="editBrandModal" tabindex="-1" aria-labelledby="editBrandModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editBrandModalLabel">Edit Brand</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editBrandForm">
                    <input type="hidden" id="editBrandId"> <!-- Hidden field to store the ID -->

                    <!-- ID display field (disabled and greyed out) -->
                    <div class="mb-3">
                        <label for="editBrandIdDisplay" class="form-label">Brand ID</label>
                        <input type="text" class="form-control" id="editBrandIdDisplay" disabled>
                    </div>

                    <!-- Brand Name input field -->
                    <div class="mb-3">
                        <label for="editBrandName" class="form-label">Brand Name</label>
                        <input type="text" class="form-control" id="editBrandName" placeholder="Brand Name"
                            required>
                    </div>

                    <!-- Brand Description input field -->
                    <div class="mb-3">
                        <label for="editBrandDescription" class="form-label">Brand Description</label>
                        <input type="text" class="form-control" id="editBrandDescription" placeholder="Brand Description"
                            required>
                    </div>

                    <!-- Submit button -->
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Popup Modal Confirmation for Delete -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this brand?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

    {{!-- document.addEventListener("DOMContentLoaded", function () {
        document.querySelector(".btn-primary").addEventListener("click", saveBrand);
    }); --}}

<script>


    async function saveBrand() {
        const brandName = document.getElementById("brandName").value.trim();
        const brandDescription = document.getElementById("brandDescription").value.trim();

        if (!brandName || !brandDescription) {
            showToast("Brand name and description are required!", "danger");
            return;
        }

        try {
            const response = await fetch("/brands/add", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name: brandName, description: brandDescription })
            });

            const result = await response.json();
            if (result.status === 200) {
                showToast(result.messenger, "success");
                addBrandToDOM(result.data[result.data.length - 1]);
            } else {
                showToast(result.messenger, "danger");
            }
        } catch (error) {
            showToast("An error occurred!", "danger");
        }
    }

    function addBrandToDOM(brand) {
        const brandListContainer = document.getElementById("brandList");
        const brandCard = document.createElement("div");
        brandCard.classList.add("brand-card");
        brandCard.setAttribute("data-index", 0);
        brandCard.innerHTML = `
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h5 class="brand-name mb-0">${brand.name}</h5>
                <small class="text-muted brand-id">ID: ${brand._id}</small>
                <p class="text-muted brand-description">${brand.description}</p>
            </div>
            <div>
                <button class="btn btn-sm btn-warning me-2" onclick="editBrand(this)">
                    <i class="bi bi-pencil"></i>
                </button>
                <button class="btn btn-sm btn-danger" onclick="deleteBrand(this)">
                    <i class="bi bi-trash"></i>
                </button>
            </div>
        </div>
    `;
        brandListContainer.appendChild(brandCard);
    }

    function deleteBrand(button) {
        const brandCard = button.closest('.brand-card');
        const brandId = brandCard.querySelector('.brand-id').innerText.split(':')[1].trim();

        if (!brandId) {
            showToast("Brand ID is required!", "danger");
            return;
        }

        // Show confirmation modal before deletion
        const modal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
        modal.show();

        // Set up the event for the confirm delete button
        document.getElementById("confirmDeleteBtn").onclick = function () {
            // Proceed with deletion if confirmed
            fetch(`/brands/delete/${brandId}`, {
                method: "DELETE"
            })
                .then(response => response.json())
                .then(result => {
                    if (result.status === 200) {
                        showToast(result.messenger, "success");
                        brandCard.remove(); // Remove brand from DOM
                        modal.hide(); // Close the modal
                    } else {
                        showToast(result.messenger, "danger");
                    }
                })
                .catch(error => {
                    showToast("An error occurred!", "danger");
                    modal.hide(); // Close the modal on error
                });
        };
    }

    function editBrand(button) {
        const brandCard = button.closest('.brand-card');
        const brandId = brandCard.querySelector('.brand-id').innerText.split(':')[1].trim();
        const brandName = brandCard.querySelector('.brand-name').innerText;
        const brandDescription = brandCard.querySelector('.brand-description').innerText;

        document.getElementById("editBrandId").value = brandId;
        document.getElementById("editBrandIdDisplay").value = brandId;
        document.getElementById("editBrandName").value = brandName;
        document.getElementById("editBrandDescription").value = brandDescription;

        new bootstrap.Modal(document.getElementById('editBrandModal')).show();
    }

    document.getElementById("editBrandForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const brandId = document.getElementById("editBrandId").value;
        const brandName = document.getElementById("editBrandName").value.trim();
        const brandDescription = document.getElementById("editBrandDescription").value.trim();

        if (!brandName || !brandDescription) {
            showToast("Brand name and description are required!", "danger");
            return;
        }

        try {
            const response = await fetch(`/brands/update/${brandId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ name: brandName, description: brandDescription })
            });

            const result = await response.json();
            if (result.status === 200) {
                showToast(result.messenger, "success");
                updateBrandInDOM(result.data);
                const modal = bootstrap.Modal.getInstance(document.getElementById('editBrandModal'));
                modal.hide();
            } else {
                showToast(result.messenger, "danger");
            }
        } catch (error) {
            showToast("An error occurred!", "danger");
        }
    });

    function updateBrandInDOM(brands) {
        const brandListContainer = document.getElementById("brandList");
        brandListContainer.innerHTML = '';

        brands.forEach(brand => {
            const brandCard = document.createElement("div");
            brandCard.classList.add("brand-card");
            brandCard.setAttribute("data-index", 0);
            brandCard.innerHTML = `
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="brand-name mb-0">${brand.name}</h5>
                    <small class="text-muted brand-id">ID: ${brand._id}</small>
                    <p class="text-muted brand-description">${brand.description}</p>
                </div>
                <div>
                    <button class="btn btn-sm btn-warning me-2" onclick="editBrand(this)">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-sm btn-danger" onclick="deleteBrand(this)">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            </div>
        `;
            brandListContainer.appendChild(brandCard);
        });
    }

    function showToast(message, type) {
        const toastEl = document.getElementById("toastMessage");
        toastEl.classList.remove("bg-success", "bg-danger");
        toastEl.classList.add(`bg-${type}`);
        toastEl.querySelector(".toast-body").innerText = message;

        const toast = new bootstrap.Toast(toastEl);
        toast.show();
    }
</script>



