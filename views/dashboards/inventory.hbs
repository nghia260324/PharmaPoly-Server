<!-- views/inventory/stats.hbs -->
<div class="container mt-3">
    <div class="card product-header mb-4 p-3 bg-light rounded">
        <div class="row align-items-center">
            <span class="col-md-1"><span>Thống kê tồn kho</span></span>
            <div class="col-md-6">
                <form id="searchForm" class="row">
                    <div class="col-md-8">
                        <input type="text" id="searchStockEntry" name="search" class="form-control"
                            placeholder="Tìm theo mã lô hàng hoặc tên sản phẩm" value="{{filters.search}}" required>
                    </div>
                    <div class="col-md-3">
                        {{!-- <label class="form-label d-block invisible">Tìm</label> --}}
                        <button type="submit" class="btn btn-primary w-100">Tìm kiếm</button>
                    </div>
                </form>
            </div>
            <div class="col-md-3"></div>
            <div class="col-md-2 row align-items-end">
                <button class="btn btn-outline-secondary" id="toggleFilter">
                    <i class="bi bi-funnel"></i> Bộ lọc
                </button>
            </div>
        </div>
    </div>
    {{!-- <h1 class="h3 mb-4">Thống kê tồn kho</h1> --}}

    {{!-- <div class="d-flex justify-content-between align-items-center mb-3 mt-3">
        <h1 class="h3">Thống kê tồn kho</h1>
        <button class="btn btn-outline-secondary" id="toggleFilter">
            <i class="bi bi-funnel"></i> Bộ lọc
        </button>
    </div> --}}
    <div class="card mb-4" id="filterCard" style="display: none;">
        <div class="card-body">
            <form id="filterForm" class="row g-3">
                <div class="col-md-12 row g-2">
                    <div class="col-md-3">
                        <label class="form-label">Sắp xếp theo</label>
                        <select class="form-select" name="sortBy">
                            <option value="highest_stock" {{#if (eq filters.sortBy "highest_stock" )}}selected{{/if}}>
                                Tồn kho cao nhất</option>
                            <option value="lowest_stock" {{#if (eq filters.sortBy "lowest_stock" )}}selected{{/if}}>Tồn
                                kho thấp nhất</option>
                            <option value="newest_stock" {{#if (eq filters.sortBy "newest_stock" )}}selected{{/if}}>
                                Hàng nhập mới nhất</option>
                            <option value="oldest_stock" {{#if (eq filters.sortBy "oldest_stock" )}}selected{{/if}}>Hàng
                                nhập cũ nhất</option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label class="form-label">Trạng thái</label>
                        <select class="form-select" name="status">
                            <option value="" {{#unless filters.status}}selected{{/unless}}>Tất cả</option>
                            <option value="not_started" {{#if (eq filters.status "not_started" )}}selected{{/if}}>Chưa
                                kích hoạt</option>
                            <option value="active" {{#if (eq filters.status "active" )}}selected{{/if}}>Đang bán
                            </option>
                            <option value="paused" {{#if (eq filters.status "paused" )}}selected{{/if}}>Tạm ngừng
                            </option>
                            <option value="sold_out" {{#if (eq filters.status "sold_out" )}}selected{{/if}}>Đã bán hết
                            </option>
                            <option value="expired" {{#if (eq filters.status "expired" )}}selected{{/if}}>Hết hạn
                            </option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label class="form-label">Danh mục</label>
                        <select class="form-select" name="category">
                            {{#if filters.category}}
                            <option value="">Tất cả</option>
                            {{else}}
                            <option value="" selected>Tất cả</option>
                            {{/if}}

                            {{#each categories}}
                            <option value="{{this._id}}" {{#if (eqId ../filters.category this._id)}}selected{{/if}}>
                                {{this.name}}
                            </option>
                            {{/each}}
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label class="form-label">Thương hiệu</label>
                        <select class="form-select" name="brand">
                            <option value="" {{#unless filters.brand}}selected{{/unless}}>Tất cả</option>
                            {{#each brands}}
                            <option value="{{this._id}}" {{#if (eqId ../filters.brand this._id)}}selected{{/if}}>
                                {{this.name}}
                            </option>
                            {{/each}}
                        </select>
                    </div>
                </div>

                <div class="col-md-12 row g-2 align-items-end">

                    <div class="col-md-3">
                        <label for="filterField" class="form-label">Lọc theo giá / số lượng</label>
                        <select id="filterField" name="filterField" class="form-select">
                            <option value="">-- Không lọc --</option>
                            <option value="import_price" {{#ifEquals filters.filterField 'import_price'
                                }}selected{{/ifEquals}}>Giá nhập</option>
                            <option value="quantity" {{#ifEquals filters.filterField 'quantity' }}selected{{/ifEquals}}>
                                Số lượng nhập</option>
                            <option value="remaining_quantity" {{#ifEquals filters.filterField 'remaining_quantity'
                                }}selected{{/ifEquals}}>Số lượng còn lại</option>
                        </select>
                    </div>

                    <div class="col-md-2 value-filter-fields" style="display: none">
                        <label for="minValue" class="form-label"><span id="minLabelName">Từ:</span> <span
                                id="minLabelValue">0</span></label>
                        <input type="number" class="form-control" name="minValue" id="minValue"
                            value="{{filters.minValue}}">
                    </div>

                    <div class="col-md-2 value-filter-fields" style="display: none">
                        <label for="maxValue" class="form-label"><span id="maxLabelName">Đến:</span> <span
                                id="maxLabelValue">0</span></label>
                        <input type="number" class="form-control" name="maxValue" id="maxValue"
                            value="{{filters.maxValue}}">
                    </div>

                </div>



                <div class="col-md-12 row g-2 align-items-end">
                    <div class="col-md-3">
                        <label for="timePeriod" class="form-label">Khoảng thời gian</label>
                        <select name="timePeriod" id="timePeriod" class="form-select">
                            <option value="" {{#unless filters.timePeriod}}selected{{/unless}}>Tất cả</option>
                            <option value="last_week" {{#if (eq filters.timePeriod "last_week" )}}selected{{/if}}>Tuần
                                trước
                            </option>
                            <option value="last_month" {{#if (eq filters.timePeriod "last_month" )}}selected{{/if}}>
                                Tháng
                                trước</option>
                            <option value="this_month" {{#if (eq filters.timePeriod "this_month" )}}selected{{/if}}>
                                Tháng
                                này</option>
                            <option value="last_3_months" {{#if (eq filters.timePeriod "last_3_months"
                                )}}selected{{/if}}>3
                                tháng gần
                                nhất</option>
                            {{!-- <option value="custom" {{#if (eq filters.timePeriod "custom" )}}selected{{/if}}>Tùy
                                chỉnh
                            </option> --}}
                            <option value="custom_import_date" {{#if (eq filters.timePeriod "custom_import_date"
                                )}}selected{{/if}}>Tùy chỉnh theo ngày nhập</option>
                            <option value="custom_expiry_date" {{#if (eq filters.timePeriod "custom_expiry_date"
                                )}}selected{{/if}}>Tùy chỉnh theo hạn sử dụng</option>
                            <option value="expiring_soon" {{#if (eq filters.timePeriod "expiring_soon"
                                )}}selected{{/if}}>Hạn sử dụng sắp hết</option>
                        </select>
                    </div>
                    <div class="col-md-3" id="expiryDateField" style="display: none;">
                        <label class="form-label">Hạn sử dụng còn lại (ngày)</label>
                        <input type="number" class="form-control" name="expiryDate" value="{{filters.expiryDate}}"
                            placeholder="Nhập số ngày" min="1">
                    </div>

                    <!-- Ngày bắt đầu -->
                    <div class="col-md-2 custom-date-field" style="display: none;">
                        <label class="form-label">Từ ngày</label>
                        {{!-- <input type="date" class="form-control" name="startDate" value="{{filters.startDate}}">
                        --}}
                        <input type="date" class="form-control" name="startDate" id="startDate" value="{{filters.startDate}}">
                    </div>

                    <!-- Ngày kết thúc -->
                    <div class="col-md-2 custom-date-field" style="display: none;">
                        <label class="form-label">Đến ngày</label>
                        {{!-- <input type="date" class="form-control" name="endDate" value="{{filters.endDate}}"> --}}
                        <input type="date" class="form-control" name="endDate" id="endDate" value="{{filters.endDate}}">
                    </div>

                    <div class="col-md-1">
                        <label class="form-label">Hiển thị</label>
                        <select class="form-select" name="limit">
                            <option value="10" {{#if (eq limit 10 )}}selected{{/if}}>10</option>
                            <option value="20" {{#if (eq limit 20 )}}selected{{/if}}>20</option>
                            <option value="50" {{#if (eq limit 50 )}}selected{{/if}}>50</option>

                        </select>
                    </div>

                    <div class="col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-funnel me-2"></i>Áp dụng
                        </button>
                    </div>
                    <div class="col-md-1">
                        <button type="button" id="btnResetFilter" class="btn btn-secondary w-100">Reset</button>
                    </div>
                </div>

            </form>
        </div>
    </div>

    <!-- Bảng thống kê -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Mã lô hàng</th>
                            <th style="width: 40%;">Sản phẩm</th>
                            <th style="width: 10%;">Giá nhập</th>
                            <th>Tổng SL</th>
                            <th>SL tồn</th>
                            <th>HSD</th>
                            <th>Ngày nhập</th>
                            <th>Trạng thái</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each stocks}}
                        <tr>
                            {{!-- <td>{{this.batch_number}}</td> --}}
                            <td>
                                <a class="fw-bold" href="/products/{{this.product_id}}/import-stock"
                                    class="text-decoration-underline">
                                    {{this.batch_number}}
                                </a>
                            </td>
                            <td>
                                <div class="column-name-limit" title="{{this.product_name}}">
                                    <a class="fw-bold"
                                        href="/products/{{this.product_id}}/detail">{{this.product_name}}</a>
                                    <small class="text-muted">({{this.product_type_name}})</small>
                                </div>
                            </td>
                            <td>{{formatPrice this.import_price}} VND</td>
                            <td>{{this.quantity}}</td>
                            <td class="{{#if (lt this.remaining_quantity 10)}}text-danger fw-bold{{/if}}">
                                {{this.remaining_quantity}}
                            </td>
                            <td>{{formatDate this.expiry_date}}</td>
                            <td>{{formatDate this.import_date}}</td>
                            <td>
                                <span class="badge {{statusBadge this.status}}">
                                    {{statusLabel this.status}}
                                </span>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
                {{#unless stocks.length}}
                <div class="text-center text-muted py-3">
                    <i class="bi bi-search display-6 d-block mb-2"></i>
                    <h5>Không tìm thấy lô hàng nào phù hợp</h5>
                    <p>Hãy thử điều chỉnh từ khóa tìm kiếm hoặc bộ lọc.</p>
                </div>
                {{/unless}}
            </div>

            <nav class="d-flex justify-content-between">
                <div class="form-text">Hiển thị {{stocks.length}}/{{total}} lô hàng</div>
                <ul class="pagination">

                </ul>
            </nav>

            <nav>
                <ul class="pagination justify-content-center">
                    {{#if (gt currentPage 1)}}
                    <li class="page-item">
                        <a class="page-link" href="javascript:void(0);" onclick="goToPage({{sub currentPage 1}})">Trang
                            trước</a>
                    </li>
                    {{/if}}

                    <li class="page-item disabled">
                        <span class="page-link">Trang {{currentPage}} / {{totalPages}}</span>
                    </li>

                    {{#if (lt currentPage totalPages)}}
                    <li class="page-item">
                        <a class="page-link" href="javascript:void(0);" onclick="goToPage({{add currentPage 1}})">Trang
                            sau</a>
                    </li>
                    {{/if}}
                </ul>
            </nav>


        </div>
    </div>
</div>

<div class="container">
    <div class="card mt-4">
        <div class="card-body">
            <div class="col-4 mb-4">
                <div class="chart-container">
                    <h5 class="card-title mb-3">Thống kê trạng thái lô hàng</h5>
                    <canvas id="orderStatusChart" height="100"></canvas>
                </div>
            </div>
            <div class="card mt-4">
                <div class="card-body">
                    <h5 class="card-title mb-3">Biểu đồ số lượng lô hàng nhập theo ngày</h5>
                    <canvas id="stockEntriesChart" height="100"></canvas>
                </div>
            </div>
        </div>
    </div>


</div>


<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="toastMessage" class="toast align-items-center text-white bg-success border-0" role="alert"
        aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toastBody">
                <!-- Message will be inserted here -->
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                aria-label="Close"></button>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@2.0.0"></script>

<script>
    // Nhận dữ liệu từ server
    const orderStatusData = {{{ json orderStatusData }}};

    // Các trạng thái sản phẩm
    const labels = ['Chưa bán', 'Đang bán', 'Tạm ngừng', 'Đã bán hết', 'Hết hạn', 'Ngừng bán'];

    // Màu sắc cho từng trạng thái
    const backgroundColors = [
        '#B0BEC5',  // Màu xám nhạt (Chưa bắt đầu)
        '#4CAF50',  // Màu xanh lá (Đang có sẵn)
        '#FF9800',  // Màu cam (Tạm ngừng)
        '#F44336',  // Màu đỏ (Đã bán hết)
        '#9E9E9E',  // Màu xám (Hết hạn)
        '#607D8B'   // Màu xanh đen (Ngừng bán)
    ];

    // Tạo biểu đồ doughnut
    const ctx = document.getElementById('orderStatusChart').getContext('2d');
    const orderStatusChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: labels,
            datasets: [{
                data: orderStatusData,  // Dữ liệu tổng số lượng
                backgroundColor: backgroundColors,  // Màu sắc cho từng trạng thái
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom',  // Vị trí của legend
                },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return tooltipItem.label + ': ' + tooltipItem.raw + ' lô hàng';
                        }
                    }
                }
            }
        }
    });
</script>
<script>
    // Dữ liệu lô hàng nhập mỗi ngày từ server (qua res.render)
    const stockData = {{{ json stockData }}};

    // Tách ngày và số lượng lô hàng nhập
    const dates = stockData.map(item => item._id);
    const quantities = stockData.map(item => item.totalEntries);

    // Tạo biểu đồ thống kê số lượng lô hàng nhập theo ngày
    new Chart(document.getElementById('stockEntriesChart'), {
        type: 'line',
        data: {
            labels: dates,
            datasets: [{
                label: 'Số lượng lô hàng nhập',
                data: quantities,
                borderColor: '#42A5F5',
                backgroundColor: 'rgba(66, 165, 245, 0.1)',
                tension: 0.4
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: true },
                tooltip: { mode: 'index', intersect: false },
                zoom: {
                    pan: {
                        enabled: true,
                        mode: 'x'  // Pan theo trục X
                    },
                    zoom: {
                        wheel: {
                            enabled: true,  // Zoom bằng cuộn chuột
                            modifierKey: 'ctrl' // Cần nhấn Ctrl khi cuộn chuột để zoom
                        },
                        pinch: {
                            enabled: true,  // Zoom bằng thao tác kéo tay
                        },
                        mode: 'x'  // Zoom theo trục X
                    }
                }
            },
            scales: {
                y: { beginAtZero: true },
                x: { title: { display: true, text: 'Ngày' } }
            }
        }
    });
</script>



<script>
    function goToPage(newPage) {
        const url = new URL(window.location.href);
        url.searchParams.set('page', newPage);
        window.location.href = url.toString();
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toggleBtn = document.getElementById("toggleFilter");
        const filterCard = document.getElementById("filterCard");

        toggleBtn.addEventListener("click", function () {
            filterCard.style.display =
                filterCard.style.display === "none" ? "block" : "none";
        });
        const timeSelect = document.getElementById('timePeriod');
        const customFields = document.querySelectorAll('.custom-date-field');

        function toggleCustomDates() {
            const isCustom = timeSelect.value === 'custom_import_date' || timeSelect.value === 'custom_expiry_date';
            customFields.forEach(el => {
                el.style.display = isCustom ? 'block' : 'none';
            });
        }
        toggleCustomDates();
        timeSelect.addEventListener('change', toggleCustomDates);
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {

        function formatCurrency(value) {
            if (!value) return '0';
            return parseInt(value).toLocaleString('vi-VN');
        }

        const filterField = document.getElementById("filterField");
        const minValueInput = document.getElementById("minValue");
        const maxValueInput = document.getElementById("maxValue");

        const minLabelValue = document.getElementById("minLabelValue");
        const maxLabelValue = document.getElementById("maxLabelValue");

        const minLabelName = document.getElementById("minLabelName");
        const maxLabelName = document.getElementById("maxLabelName");

        const valueFields = document.querySelectorAll(".value-filter-fields");

        function updateLabelsAndDisplay() {
            const field = filterField.value;
            const isPrice = field === "import_price";

            if (field === "import_price" || field === "quantity" || field === "remaining_quantity") {
                valueFields.forEach(f => f.style.display = "block");

                // Cập nhật nhãn phù hợp
                if (isPrice) {
                    minLabelName.textContent = "Giá nhập từ:";
                    maxLabelName.textContent = "Đến:";
                    minLabelValue.textContent = formatCurrency(minValueInput.value) + " VND";
                    maxLabelValue.textContent = formatCurrency(maxValueInput.value) + " VND";
                } else if (field === "quantity") {
                    minLabelName.textContent = "SL nhập từ:";
                    maxLabelName.textContent = "Đến:";
                    minLabelValue.textContent = minValueInput.value || 0;
                    maxLabelValue.textContent = maxValueInput.value || 0;
                } else if (field === "remaining_quantity") {
                    minLabelName.textContent = "SL còn lại từ:";
                    maxLabelName.textContent = "Đến:";
                    minLabelValue.textContent = minValueInput.value || 0;
                    maxLabelValue.textContent = maxValueInput.value || 0;
                }

            } else {
                valueFields.forEach(f => f.style.display = "none");
            }
        }

        minValueInput.addEventListener('input', updateLabelsAndDisplay);
        maxValueInput.addEventListener('input', updateLabelsAndDisplay);
        filterField.addEventListener("change", updateLabelsAndDisplay);

        updateLabelsAndDisplay();
    });
</script>


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const filterForm = document.getElementById("filterForm");
        const filterField = document.getElementById("filterField");
        const minValueInput = document.getElementById("minValue");
        const maxValueInput = document.getElementById("maxValue");
        const startDateInput = document.getElementById("startDate");
        const endDateInput = document.getElementById("endDate");

        const timePeriodSelect = document.getElementById('timePeriod');
        const expiryDateField = document.getElementById('expiryDateField');

        timePeriodSelect.addEventListener('change', function () {
            if (timePeriodSelect.value === 'expiring_soon') {
                expiryDateField.style.display = 'block';
            } else {
                expiryDateField.style.display = 'none';
            }
        });

        if (timePeriodSelect.value === 'expiring_soon') {
            expiryDateField.style.display = 'block';
        }

        filterForm.addEventListener("submit", function (e) {
            e.preventDefault();

            const filterFieldValue = filterField.value;
            const minValue = minValueInput.value.trim();
            const maxValue = maxValueInput.value.trim();
            const startDate = startDateInput?.value;
            const endDate = endDateInput?.value;

            let fieldLabel = "Giá";
            if (filterFieldValue === "quantity") fieldLabel = "Số lượng nhập";
            if (filterFieldValue === "remaining_quantity") fieldLabel = "Số lượng còn lại";

            // Validate theo loại
            if (minValue && Number(minValue) < 0) {
                showToast(`${fieldLabel} tối thiểu phải là số dương.`, "bg-danger");
                return;
            }

            if (maxValue && Number(maxValue) < 0) {
                showToast(`${fieldLabel} tối đa phải là số dương.`, "bg-danger");
                return;
            }

            if (minValue && maxValue && Number(minValue) >= Number(maxValue)) {
                showToast(`${fieldLabel} tối đa phải lớn hơn tối thiểu.`, "bg-danger");
                return;
            }

            if (startDate && endDate && new Date(startDate) > new Date(endDate)) {
                showToast("Vui lòng chọn ngày kết thúc lớn hơn ngày bắt đầu.", "bg-danger");
                return;
            }

            const searchParams = new URLSearchParams(new FormData(searchForm));

            if (filterForm) {
                const filterParams = new FormData(filterForm);
                for (const [key, value] of filterParams.entries()) {
                    if (!searchParams.has(key)) {
                        searchParams.append(key, value);
                    }
                }
            }
            window.location.href = `?${searchParams.toString()}`;
        });
        function showToast(message, bgClass = "bg-success") {
            const toastElement = document.getElementById("toastMessage");
            const toastBody = document.getElementById("toastBody");

            toastBody.textContent = message;
            toastElement.classList.remove("bg-success", "bg-danger");
            toastElement.classList.add(bgClass);

            const toast = new bootstrap.Toast(toastElement);
            toast.show();
        }
    });

</script>

<script>
    document.getElementById('btnResetFilter').addEventListener('click', function () {
        const form = document.getElementById('filterForm');
        form.reset();

        form.querySelectorAll('input[type="date"], input[type="number"]').forEach(input => input.value = '');
        form.querySelectorAll('select').forEach(select => select.selectedIndex = 0);
        document.querySelectorAll('.custom-date-field, .price-filter-fields').forEach(field => {
            field.style.display = 'none';
        });

        document.getElementById('priceFilterCheckbox').checked = false;
    });
</script>