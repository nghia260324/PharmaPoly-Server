<style>
  .column-name-limit {
    max-width: 240px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
</style>

<!-- views/products/stats.hbs -->
<div class="container mt-3">
  {{!-- <h1 class="h3 mb-4">Thống kê sản phẩm</h1> --}}
  {{!-- <div class="d-flex justify-content-between align-items-center mb-3 mt-3">
    <h1 class="h3">Thống kê sản phẩm</h1>
    <button class="btn btn-outline-secondary" id="toggleFilter">
      <i class="bi bi-funnel"></i> Bộ lọc
    </button>
  </div> --}}
  <div class="card product-header mb-4 p-3 bg-light rounded">
    <div class="row align-items-center">
      <span class="col-md-1"><span>Thống kê sản phẩm</span></span>
      <div class="col-md-6">
        <form id="searchForm" class="row">
          <div class="col-md-8">
            <input type="text" id="searchStockEntry" name="search" class="form-control"
              placeholder="Tìm theo tên sản phẩm" value="{{filters.search}}" required>
          </div>
          <div class="col-md-3">
            {{!-- <label class="form-label d-block invisible">Tìm</label> --}}
            <button type="submit" class="btn btn-primary w-100">Tìm kiếm</button>
          </div>
        </form>
      </div>
      <div class="col-md-3"></div>
      <div class="col-md-2 row align-items-end">
        <button class="btn btn-outline-secondary" id="toggleFilter">
          <i class="bi bi-funnel"></i> Bộ lọc
        </button>
      </div>
    </div>
  </div>

  <div class="card mb-4" id="filterCard" style="display: none;">
    <div class="card-body">
      <form id="filterForm" class="row g-3">

        <div class="col-md-12 row g-2">
          <div class="col-md-3">
            <label class="form-label">Sắp xếp theo</label>
            <select class="form-select" name="sortBy">
              <option value="best_selling" {{#if (eq filters.sortBy "best_selling" )}}selected{{/if}}>Bán chạy nhất
              </option>
              <option value="worst_selling" {{#if (eq filters.sortBy "worst_selling" )}}selected{{/if}}>Bán chậm nhất
              </option>
              <option value="highest_revenue" {{#if (eq filters.sortBy "highest_revenue" )}}selected{{/if}}>Doanh thu
                cao nhất</option>
              <option value="lowest_revenue" {{#if (eq filters.sortBy "lowest_revenue" )}}selected{{/if}}>Doanh thu
                thấp
                nhất</option>
              <option value="highest_rating" {{#if (eq filters.sortBy "highest_rating" )}}selected{{/if}}>Đánh giá cao
                nhất</option>
              <option value="unsold" {{#if (eq filters.sortBy "unsold" )}}selected{{/if}}>Chưa có lượt bán</option>
            </select>
          </div>
          <div class="col-md-3">
            <label class="form-label">Trạng thái</label>
            <select class="form-select" name="status">
              {{!-- <option value="">Tất cả</option>
              <option value="active">Đang bán</option>
              <option value="out_of_stock">Hết hàng</option>
              <option value="discontinued">Ngừng bán</option> --}}
              <option value="" {{#unless filters.status}}selected{{/unless}}>Tất cả</option>
              <option value="active" {{#if (eq filters.status "active" )}}selected{{/if}}>Đang bán</option>
              <option value="out_of_stock" {{#if (eq filters.status "out_of_stock" )}}selected{{/if}}>Hết hàng
              </option>
              <option value="discontinued" {{#if (eq filters.status "discontinued" )}}selected{{/if}}>Ngừng bán
              </option>

            </select>
          </div>

          <div class="col-md-3">
            <label class="form-label">Danh mục</label>
            <select class="form-select" name="category">
              {{#if filters.category}}
              <option value="">Tất cả</option>
              {{else}}
              <option value="" selected>Tất cả</option>
              {{/if}}

              {{#each categories}}
              <option value="{{this._id}}" {{#if (eqId ../filters.category this._id)}}selected{{/if}}>
                {{this.name}}
              </option>
              {{/each}}
            </select>
          </div>

          <div class="col-md-3">
            <label class="form-label">Thương hiệu</label>
            <select class="form-select" name="brand">
              <option value="" {{#unless filters.brand}}selected{{/unless}}>Tất cả</option>
              {{#each brands}}
              <option value="{{this._id}}" {{#if (eqId ../filters.brand this._id)}}selected{{/if}}>{{this.name}}
              </option>
              {{/each}}
            </select>
          </div>

        </div>

        {{!--
        <div class="col-md-12 row g-2 align-items-end">
          <div class="col-md-2 text-center">
            <input type="checkbox" id="priceFilterCheckbox" {{#if filters.minPrice}}checked{{/if}}>
            <label for="priceFilterCheckbox" class="form-label">Lọc theo tổng tiền</label>
          </div>
          <div class="col-md-2 price-filter-fields" style="display: none">
            <label for="minPrice" class="form-label">Giá từ: <span id="minPriceLabel">0 VND</span></label>
            <input type="number" class="form-control" name="minPrice" id="minPrice" value="{{filters.minPrice}}">
          </div>

          <div class="col-md-2 price-filter-fields" style="display: none">
            <label for="maxPrice" class="form-label">Đến: <span id="maxPriceLabel">0 VND</span></label>
            <input type="number" class="form-control" name="maxPrice" id="maxPrice" value="{{filters.maxPrice}}">
          </div>

        </div> --}}
        <div class="col-md-12 row g-2 align-items-end">

          <div class="col-md-3">
            <label for="filterField" class="form-label">Lọc theo giá bán / doanh thu</label>
            <select id="filterField" name="filterField" class="form-select">
              <option value="">-- Không lọc --</option>
              <option value="price" {{#ifEquals filters.filterField 'price' }}selected{{/ifEquals}}>Giá bán</option>
              <option value="revenue" {{#ifEquals filters.filterField 'revenue' }}selected{{/ifEquals}}>
                Doanh thu</option>
            </select>
          </div>

          <div class="col-md-2 value-filter-fields" style="display: none">
            <label for="minValue" class="form-label"><span id="minLabelName">Từ:</span> <span
                id="minLabelValue">0</span></label>
            <input type="number" class="form-control" name="minValue" id="minValue" value="{{filters.minValue}}">
          </div>

          <div class="col-md-2 value-filter-fields" style="display: none">
            <label for="maxValue" class="form-label"><span id="maxLabelName">Đến:</span> <span
                id="maxLabelValue">0</span></label>
            <input type="number" class="form-control" name="maxValue" id="maxValue" value="{{filters.maxValue}}">
          </div>

        </div>

        <!-- Lọc theo trạng thái -->
        <div class="col-md-12 row g-2 align-items-end">
          <div class="col-md-2">
            <label for="timePeriod" class="form-label">Khoảng thời gian</label>
            <select name="timePeriod" id="timePeriod" class="form-select">
              <option value="" {{#unless filters.timePeriod}}selected{{/unless}}>Tất cả</option>
              <option value="last_week" {{#if (eq filters.timePeriod "last_week" )}}selected{{/if}}>Tuần trước</option>
              <option value="last_month" {{#if (eq filters.timePeriod "last_month" )}}selected{{/if}}>Tháng trước
              </option>
              <option value="this_month" {{#if (eq filters.timePeriod "this_month" )}}selected{{/if}}>Tháng này</option>
              <option value="last_3_months" {{#if (eq filters.timePeriod "last_3_months" )}}selected{{/if}}>3 tháng gần
                nhất</option>
              <option value="custom" {{#if (eq filters.timePeriod "custom" )}}selected{{/if}}>Tùy chỉnh</option>
            </select>
          </div>

          <!-- Ngày bắt đầu -->
          <div class="col-md-2 custom-date-field" style="display: none;">
            <label class="form-label">Từ ngày</label>
            {{!-- <input type="date" class="form-control" name="startDate" value="{{filters.startDate}}"> --}}
            <input type="date" class="form-control" name="startDate" value="{{filters.startDate}}">
          </div>

          <!-- Ngày kết thúc -->
          <div class="col-md-2 custom-date-field" style="display: none;">
            <label class="form-label">Đến ngày</label>
            {{!-- <input type="date" class="form-control" name="endDate" value="{{filters.endDate}}"> --}}
            <input type="date" class="form-control" name="endDate" value="{{filters.endDate}}">
          </div>

          <!-- Chọn số lượng hiển thị -->
          <div class="col-md-1">
            <label class="form-label">Hiển thị</label>
            <select class="form-select" name="limit">
              {{!-- <option>10</option>
              <option>20</option>
              <option>50</option> --}}
              <option value="10" {{#if (eq limit 10 )}}selected{{/if}}>10</option>
              <option value="20" {{#if (eq limit 20 )}}selected{{/if}}>20</option>
              <option value="50" {{#if (eq limit 50 )}}selected{{/if}}>50</option>

            </select>
          </div>

          <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-primary w-100">
              <i class="bi bi-funnel me-2"></i>Áp dụng
            </button>
          </div>
          <div class="col-md-1">
            <button type="button" id="btnResetFilter" class="btn btn-secondary w-100">Reset</button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <!-- Bảng thống kê -->
  <div class="card">
    <div class="card-body">
      <div class="table-responsive">
        <table class="table table-hover">
          <thead>
            <tr>
              <th>Hình ảnh</th>
              <th style="width: 10%;">Tên sản phẩm</th>
              <th>Giá bán</th>
              <th>Đã bán</th>
              <th>Doanh thu</th>
              <th>Đánh giá</th>
              <th>Trạng thái</th>
            </tr>
          </thead>
          <tbody>
            {{#each products}}
            <tr>
              <td>
                <img src="{{this.image}}" alt="Ảnh sản phẩm" class="img-thumbnail"
                  style="width: 60px; height: 60px; object-fit: cover;">
              </td>

              <td>
                <div class="column-name-limit" title="{{this.name}}">
                  <a href="/products/{{this._id}}/detail">{{this.name}}</a>
                </div>
                <div title="{{this.product_type_name}}">
                  ({{this.product_type_name}})
                </div>
              </td>
              <td>{{formatPrice this.price}} VND</td>
              <td>{{this.sold_quantity}}</td>
              <td>{{formatPrice this.total_revenue}} VND</td>
              {{!-- <td>{{this.stock_quantity}}</td> --}}
              <td>
                <div class="d-flex align-items-center small">
                  <span class="me-2">{{this.average_rating}}</span>
                  <div class="rating-stars">
                    {{#stars this.average_rating}}{{/stars}}
                  </div>
                  <small class="text-muted ms-2">({{this.review_count}})</small>
                </div>
              </td>
              <td>
                <span class="badge {{statusBadge this.status}}">
                  {{statusLabel this.status}}
                </span>
              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>

        {{#unless products.length}}
        <div class="text-center text-muted py-3">
          <i class="bi bi-search display-6 d-block mb-2"></i>
          <h5>Không tìm thấy sản phẩm nào phù hợp</h5>
          <p>Hãy thử điều chỉnh từ khóa tìm kiếm hoặc bộ lọc.</p>
        </div>
        {{/unless}}

      </div>

      <!-- Phân trang -->
      <nav class="d-flex justify-content-between">
        <div class="form-text">Hiển thị {{products.length}}/{{total}} sản phẩm</div>
        <ul class="pagination">
          {{!-- {{#paginate pagination}}{{/paginate}} --}}
        </ul>
      </nav>

      <nav>
        <ul class="pagination justify-content-center">
          {{#if (gt currentPage 1)}}
          <li class="page-item">
            <a class="page-link" href="?page={{sub currentPage 1}}&limit={{limit}}">Trang trước</a>
          </li>
          {{/if}}

          <li class="page-item disabled">
            <span class="page-link">Trang {{currentPage}} / {{totalPages}}</span>
          </li>

          {{#if (lt currentPage totalPages)}}
          <li class="page-item">
            <a class="page-link" href="?page={{add currentPage 1}}&limit={{limit}}">Trang sau</a>
          </li>
          {{/if}}
        </ul>
      </nav>
    </div>
  </div>
</div>

<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="toastMessage" class="toast align-items-center text-white bg-success border-0" role="alert"
        aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toastBody">
                <!-- Message will be inserted here -->
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                aria-label="Close"></button>
        </div>
    </div>
</div>

<!-- Script xử lý filter -->
<script>
  document.getElementById('filterForm').addEventListener('submit', function (e) {
    e.preventDefault();
    const formData = new FormData(this);
    const params = new URLSearchParams(formData);
    window.location.search = params.toString();
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const toggleBtn = document.getElementById("toggleFilter");
    const filterCard = document.getElementById("filterCard");

    toggleBtn.addEventListener("click", function () {
      filterCard.style.display =
        filterCard.style.display === "none" ? "block" : "none";
    });
    const timeSelect = document.getElementById('timePeriod');
    const customFields = document.querySelectorAll('.custom-date-field');

    function toggleCustomDates() {
      const isCustom = timeSelect.value === 'custom';
      customFields.forEach(el => {
        el.style.display = isCustom ? 'block' : 'none';
      });
    }

    // Initial check
    toggleCustomDates();

    // Update on change
    timeSelect.addEventListener('change', toggleCustomDates);
  });
</script>
{{!--
<script>
  document.addEventListener('DOMContentLoaded', function () {

    function formatCurrency(value) {
      if (!value) return '0 VND';
      return parseInt(value).toLocaleString('vi-VN') + ' VND';
    }

    const minValueInput = document.getElementById('minValue');
    const maxValueInput = document.getElementById('maxValue');

    const minValueLabel = document.getElementById('minValueLabel');
    const maxValueLabel = document.getElementById('maxValueLabel');

    minValueInput.addEventListener('input', function () {
      const minValueValue = minValueInput.value;
      minValueLabel.textContent = formatCurrency(minValueValue);
    });

    maxValueInput.addEventListener('input', function () {
      const maxValueValue = maxValueInput.value;
      maxValueLabel.textContent = formatCurrency(maxValueValue);
    });

    minValueLabel.textContent = formatCurrency(minValueInput.value);
    maxValueLabel.textContent = formatCurrency(maxValueInput.value);


    function togglePriceFilter() {
      var priceFields = document.querySelectorAll(".price-filter-fields");
      var checkbox = document.getElementById("priceFilterCheckbox");
      if (checkbox.checked) {
        priceFields.forEach(function (field) {
          field.style.display = "block";
        });
      } else {
        priceFields.forEach(function (field) {
          field.style.display = "none";
        });
      }
    }
    togglePriceFilter();
    document.getElementById("priceFilterCheckbox").addEventListener("change", togglePriceFilter);

  });
</script> --}}


<script>
  document.addEventListener('DOMContentLoaded', function () {

    function formatCurrency(value) {
      if (!value) return '0';
      return parseInt(value).toLocaleString('vi-VN');
    }

    const filterField = document.getElementById("filterField");
    const minValueInput = document.getElementById("minValue");
    const maxValueInput = document.getElementById("maxValue");

    const minLabelValue = document.getElementById("minLabelValue");
    const maxLabelValue = document.getElementById("maxLabelValue");

    const minLabelName = document.getElementById("minLabelName");
    const maxLabelName = document.getElementById("maxLabelName");

    const valueFields = document.querySelectorAll(".value-filter-fields");

    function updateLabelsAndDisplay() {
      const field = filterField.value;
      const isPrice = field === "price";

      if (field === "price" || field === "revenue") {
        valueFields.forEach(f => f.style.display = "block");

        if (isPrice) {
          minLabelName.textContent = "Giá bán từ:";
          maxLabelName.textContent = "Đến:";
        } else if (field === "revenue") {
          minLabelName.textContent = "Doanh thu từ:";
          maxLabelName.textContent = "Đến:";
        }
        minLabelValue.textContent = formatCurrency(minValueInput.value) + " VND";
        maxLabelValue.textContent = formatCurrency(maxValueInput.value) + " VND";
      } else {
        valueFields.forEach(f => f.style.display = "none");
      }
    }

    minValueInput.addEventListener('input', updateLabelsAndDisplay);
    maxValueInput.addEventListener('input', updateLabelsAndDisplay);
    filterField.addEventListener("change", updateLabelsAndDisplay);

    updateLabelsAndDisplay();
  });
</script>

<script>
  document.getElementById('btnResetFilter').addEventListener('click', function () {
    const form = document.getElementById('filterForm');
    form.reset();

    form.querySelectorAll('input[type="date"], input[type="number"]').forEach(input => input.value = '');
    form.querySelectorAll('select').forEach(select => select.selectedIndex = 0);
    document.querySelectorAll('.custom-date-field, .price-filter-fields').forEach(field => {
      field.style.display = 'none';
    });

    document.getElementById('priceFilterCheckbox').checked = false;
  });
</script>


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const filterForm = document.getElementById("filterForm");
        const filterField = document.getElementById("filterField");
        const minValueInput = document.getElementById("minValue");
        const maxValueInput = document.getElementById("maxValue");
        const startDateInput = document.getElementById("startDate");
        const endDateInput = document.getElementById("endDate");


        filterForm.addEventListener("submit", function (e) {
            e.preventDefault();

            const filterFieldValue = filterField.value;
            const minValue = minValueInput.value.trim();
            const maxValue = maxValueInput.value.trim();
            const startDate = startDateInput?.value;
            const endDate = endDateInput?.value;

            let fieldLabel = "Giá";
            if (filterFieldValue === "price") fieldLabel = "Giá nhập";
            if (filterFieldValue === "revenue") fieldLabel = "Doanh thu";

            if (filterFieldValue && filterFieldValue !== '' && minValue && Number(minValue) < 0) {
                showToast(`${fieldLabel} tối thiểu phải là số dương.`, "bg-danger");
                return;
            }

            if (filterFieldValue && filterFieldValue !== '' && maxValue && Number(maxValue) < 0) {
                showToast(`${fieldLabel} tối đa phải là số dương.`, "bg-danger");
                return;
            }

            if (filterFieldValue && filterFieldValue !== '' && minValue && maxValue && Number(minValue) >= Number(maxValue)) {
                showToast(`${fieldLabel} tối đa phải lớn hơn tối thiểu.`, "bg-danger");
                return;
            }

            if (filterFieldValue && filterFieldValue !== '' && startDate && endDate && new Date(startDate) > new Date(endDate)) {
                showToast("Vui lòng chọn ngày kết thúc lớn hơn ngày bắt đầu.", "bg-danger");
                return;
            }



            const searchParams = new URLSearchParams(new FormData(searchForm));

            if (filterForm) {
                const filterParams = new FormData(filterForm);
                for (const [key, value] of filterParams.entries()) {
                    if (!searchParams.has(key)) {
                        searchParams.append(key, value);
                    }
                }
            }
            window.location.href = `?${searchParams.toString()}`;
        });
        function showToast(message, bgClass = "bg-success") {
            const toastElement = document.getElementById("toastMessage");
            const toastBody = document.getElementById("toastBody");

            toastBody.textContent = message;
            toastElement.classList.remove("bg-success", "bg-danger");
            toastElement.classList.add(bgClass);

            const toast = new bootstrap.Toast(toastElement);
            toast.show();
        }
    });

</script>
